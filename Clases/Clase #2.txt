-Paradigma de programacion

Es un estilo fundametal de programacion.
Es una forma de construir los programas 
En el paradigma funcional esta modelado con funciones matematicas y teoricas Eje:
Scheme, list, f#

-Paradigma imperativo

Esta basado en pasos, comandos y estructuras Eje:
C, C++, PHP

-Paradigma logico

Esta modelado con acciones y reglas Eje:
Prolog

-Paradigma Orientado a objetos (OO)

Todo es modelado como un objeto Eje:
Java, C++, C#, SmallTalk

-Programacion OO

Tiene diseño y contruccion en el paradigma OO
El modelado de software es similar a lo que se describe en la vida real
Se definen atributos y comportamientos o metodos

-Conceptos importantes:

-Abstraccion:
	No es una representacion fiel a la realidad
	"El artista dibuja de acuerdo a su realidad"
	Es una capacidad de los humanos para representar la realidad

-Encapsulacion:
	En programacion OO los metodos y atributos se almacenan en los objetos
	Los objetos pueden ocultar informacion Eje:
	Un microondas solo expone lo necesario y oculta su funcionamiento interior

-Clases:
	Son como moldes
	Cada molde defne como sera el objeto pero no el objeto en si
	Se utiliza el objeto no la clase
	Definen los atributos y metodos
	Un atributo es una variable Eje: float, boolean, etc. Esta enlazada a un objeto
	Los metodos son operaciones que hacen cambios en los atributos, son mensajes enviados a un objeto especifico

-Instancia:
	Es crear un objeto usando la clase definida, no todas son parecidas 
	Cada una es una entidad separada
	El cambio en una instrancia no afecta a otra a otra de la misma clase
	Los metodos son ejecutados en una instancia especifica

-Herencia:
	Es la concatenacion de todas las clases anteriores
	Se pueden compartir metodos y atributos por medio de esta, tambien puede agregar nuevos metodos
	Es muy buena para reutilizar codigo
	Es un tipo de relacion, pero se se utilizan bajos niveles de herencia (1,2 niveles)

-Polimorfismo:
	Esta relacionado con la herencia
	Se implementa un mismo metodo pero se ejecuta de manera diferente
	Se puede modificar sobreescribiendolo
	Trata objetos diferentes como si fueran lo mismo

 